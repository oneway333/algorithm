/*
 *
 *
 *
 * Salary.txt 中有 200 条员工记录，格式如下：
员工编号 员工姓名 基础工资 奖金 加班工资
1       李明 2000 1500 800
2       小红 1800 1000 900
3       小张 2200 1200 800
4       张杰 2500 1000 1000
实现以下功能：
(1)读取文件，并按照总工资（基础工资+奖金+加班工资）从小到大的顺序输出员工信息
(2)输出加班工资最少和最多的人的编号和姓名
(3)根据输入的员工姓名输出员工信息，考虑重复情况
 *
 *
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define N 300

typedef struct {
    int num;
    char name[20];
    int salarys[3], total;
} Employee;

void sort(Employee employee[], int n){
    for (int i = 0; i < n - 1; i++){
        int k = i;
        for (int j = i + 1; j < n; j++)
            if (employee[k].total > employee[j].total) k = j;
        if (k != i){
            Employee t = employee[k];
            employee[k] = employee[i];
            employee[i] = t;
        }
    }

}

void init(Employee employee[], int n){
    FILE *fp;
    if ((fp = fopen("Salary.txt", "r")) == NULL){
        printf("file open failed\n");
        exit(0);
    }
    // 文件读取，加班工资在salarys[2]
    for (int i = 0; i < n; i++)
        fscanf(fp, "%d %s %d %d %d", &employee[i].num, employee[i].name, &employee[i].salarys[0], &employee[i].salarys[1], &employee[i].salarys[2]);
    // 统计总工资
    for (int i = 0; i < n; i++){
        int s = 0;
        for (int j = 0; j < 3; j++)
            s += employee[i].salarys[j];
        employee[i].total = s;
    }


}

// 加班工资在salarys[2]
void extra(Employee employee[], int n){
    int max = 0, min = employee[0].salarys[2];
    for (int i = 0; i < n; i++){
        int over = employee[i].salarys[2];
        max = max > over ? max : over;
        min = min < over ? min : over;
    }
    for (int i = 0; i < n; i++){
        int over = employee[i].salarys[2];
        if (over == max) printf("%d %s 's overtime salary is max\n", employee[i].num, employee[i].name);
        else if (over == min) printf("%d %s 's overtime salary is min\n", employee[i].num, employee[i].name);
    }
}

void output(Employee employee){
    printf("%d %s", employee.num, employee.name);
    for (int j = 0; j < 3; j++)
        printf("%d ", employee.salarys[j]);
    printf("%d\n", employee.total);

}

void find(Employee employee[], int n){
    char s[20] = {0};
    scanf("%s", s);
    for (int i = 0; i < n; i++){
        if (strcmp(s, employee[i].name) == 0)
            output(employee[i]);
    }
}



int main(){
    Employee employee[200] = {0};
    int n = 200;
    // 文件读取
    init(employee, n);
    // 对总工资进行升序排序
    sort(employee, n);
    // 打印输出
    for (int i = 0; i < n; i++) output(employee[i]);
    extra(employee, n);
    find(employee, n);
    return 0;
}