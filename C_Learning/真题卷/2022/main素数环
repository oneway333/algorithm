/*
 *
 *
 *
 * 将1-n这n个数排列成⼀个环，若任意两两相邻之和是⼀个素数，那么这个环构成⼀个素数环，要求输出前五个素数环
2. 素数环
 *
 *
 *
 */

#include <stdio.h>
#include <math.h>
#include <stdlib.h>

#define N 50

int path[N], visited[N], p = 0;

int isPrime(int k){
    int s = sqrt(k), i;
    for (i = 2; i <= s; i++){
        if (k % i == 0) break;
    }
    if (i > s) return 1;
    else return 0;
}

void prime(int k, int n){
    if (k == n && path[0] == 1){
        if (isPrime(path[k - 1] + path[0])){
            for (int i = 0; i < k; ++i)
                printf("%d ", path[i]);
            p++;
            if (p == 5) exit(0);
        }
        putchar('\n');
        return;
    }
    for (int i = 1; i <= n; i++){
        if (visited[i] == 1) continue;
        if (k > 0 && !isPrime(i + path[k - 1])) continue;
        path[k] = i;
        visited[i] = 1;
        prime(k + 1, n);
        visited[i] = 0;
    }
}

int main(){
    // 1-4能构成5个素数环
    for (int i = 4; i < 10; i++)
        prime(0, i);
    return 0;
}