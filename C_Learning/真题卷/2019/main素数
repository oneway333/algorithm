/*
 *
 *
 * 素数
 *
 *
 *
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define N 300


// 双胞胎数的对数
void pair(int a[], int n){
    int i, j, c = 0, ml = 0, mr = 1;// 素数所在下标， 最大素数所在下标
    for (i = 0; i < n - 1; i++)
        for (j = i + 1; j < n; j++)
            if (a[j] - a[i] == 2) {
                c++;
                ml = i;
                mr = j;
            } else if (a[j] - a[i] < 2) {
                continue;
            } else if (a[j] - a[i] > 2){
                break;
            }
    printf("total %d pairs\n", c);
    printf("max is a[%d]:%d, a[%d]:%d\n", ml, a[ml], mr, a[mr]);
}

// 求所有素数并保存
void prim(int a[]){
    int n = 0;
    FILE *fp;
    if ((fp = fopen("prime.txt", "a")) == NULL){
        printf("file open failed!");
        exit(0);
    }
    for (int i = 2; i <= 300; i++){
        int s = sqrt(i), j;
        for (j = 2; j <= s; j++)
            if (i % j == 0) break;
        if (j > s){
            fprintf(fp, "%d\n", i);
            a[n++] = i;
        }
    }
    pair(a, n);
    fclose(fp);
}



int main(){
    int a[N] = {0};
    prim(a);
    return 0;
}
