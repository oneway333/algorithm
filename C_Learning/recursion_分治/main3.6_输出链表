/*
 *
3.6 输出链表
给定一个链表的头指针head，要求按照逆序输出链表的所有元素，元素之间使用->分隔，不要输出多余的->。
输入：head = [1,2,3,4,5,6]
输出：6->5->4->3->2->1
 */

#include <stdio.h>
#include <stdlib.h>

typedef struct node{
    int n;
    struct node *next;
} Node;

Node * newNode(int n){
    Node *node = (Node *)malloc(sizeof(Node));
    node->n = n;
    node->next = NULL;
    return node;
}

Node *createList(int nums[], int n){
    Node *head = NULL;
    Node *p = head;
    for (int i = 0; i < n; ++i) {
        Node *t = newNode(nums[i]);
        if (head == NULL) head = t;
        else p->next = t;
        p = t;
    }
    return head;
}

void show(Node *head){
    while (head != NULL){
        printf("%d\t", head->n);
        head = head->next;
    }
}

void showAnch(Node *head){
    if (head == NULL) return;
    if (head->next == NULL) {
        printf("%d", head->n);
        return;
    }
    showAnch(head->next);
    printf("->%d", head->n);
}

int main(){
    int nums[] = {1, 2, 3, 4, 5, 6};
    Node *head = createList(nums, sizeof(nums) / sizeof(int));
//    show(head);
    showAnch(head);
    return 0;

}