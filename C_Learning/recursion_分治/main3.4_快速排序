/*
 *
3.4 快速排序
给定一个乱序数组nums，对其进行排序，要求时间复杂度为o(nlogn)。
输入：nums = [3,7,2,1,8,5]
输出：[1,2,3,5,7,8]
输入：nums = [1,4,3,5,2]
输出：[1,2,3,4,5]
 */

#include<stdio.h>

// 把 nums[l, r] 的基准数归位并返回归位后的下标
int partition(int nums[], int l, int r) {
    int base = nums[l];
    while (l < r) {
        while (l < r && nums[r] >= base) r--;
        nums[l] = nums[r];
        while (l < r && nums[l] <= base) l++;
        nums[r] = nums[l];
    }
    nums[l] = base;
    return l;
}

// 对 nums[l, r] 元素做排序
void quickSort(int nums[], int l, int r) {
    if (l >= r) return;
    int k = partition(nums, l, r);
    quickSort(nums, l, k - 1);
    quickSort(nums, k + 1, r);
}

int main() {
    int n = 6;
    int nums[] = {3,7,2,1,8,5};
    quickSort(nums, 0, n - 1);
    for (int i = 0; i < n; i++)
        printf("%d ", nums[i]);
    return 0;
}