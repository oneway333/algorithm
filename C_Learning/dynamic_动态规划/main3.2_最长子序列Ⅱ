/*
 *
3.2 最长子数列Ⅱ
给定由n个正整数组成的序列nums，要求从中选出一个子序列（不一定连续）使得子序列不减，返回最长子序列的长度。
输入：nums=[2,1,3,7,4,4,5]
输出：5
输入：nums=[48,16,45,47,52,46,36,28,46,69,14,42]
输出：5

 */

#include <stdio.h>

#define N 500

int subArr(int nums[], int n){
    int dp[N] = {0}, max = 1;
    dp[n - 1] = 1;
    for (int i = n - 2; i >= 0 ; i--) {
        // 注意这里要是0
        int m = 0;
        for (int j = i + 1; j < n; ++j)
            if (nums[i] <= nums[j])
                m = dp[j] > m ? dp[j] : m;
        dp[i] = m + 1;
        max = dp[i] > max ? dp[i] : max;
    }
    return max;
}

int main(){

    int nums1[] = {2,1,3,7,4,4,5}, n1 = sizeof(nums1) / sizeof(int);
    int nums2[] = {48,16,45,47,52,46,36,28,46,69,14,42}, n2 = sizeof(nums2) / sizeof(int);
    printf("%d\n", subArr(nums1, n1));
    printf("%d\n", subArr(nums2, n2));
    return 0;
}