/*
 *
3.1 最长子序列
给定由n个正整数组成的序列nums，要求从中选出一个子序列（位置连续）使得子序列不减，返回最长子序列的长度。
输入：nums=[2,1,3,7,4,4,5]
输出：3
输入：nums=[48,16,45,47,52,46,36,28,46,69,14,42]
输出：4

 */

#include <stdio.h>

#define N 500

int subSet(int nums[], int n){
    int dp[N] = {0}, max = 1;
    dp[n - 1] = 1;
    for (int i = n - 2; i >= 0; i--) {
        dp[i] = nums[i] <= nums[i + 1] ? dp[i + 1] + 1 : 1;
        // 序列都是用这种max来记录的
        max = dp[i] > max ? dp[i] : max;
    }
    return max;
}

int main(){

    int nums1[] = {2,1,3,7,4,4,5}, n1 = sizeof(nums1) / sizeof(int);
    int nums2[] = {48,16,45,47,52,46,36,28,46,69,14,42}, n2 = sizeof(nums2) / sizeof(int);
    printf("%d\n", subSet(nums1, n1));
    printf("%d\n", subSet(nums2, n2));
    return 0;
}