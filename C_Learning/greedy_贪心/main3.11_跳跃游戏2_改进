/*
 *
3.11 跳跃游戏Ⅱ
给你一个非负整数数组nums，你最初位于数组的第一个下标 。数组中的每个元素代表你在该位置可以跳跃的最大长度，求跳到最后一个元素的最少步数，若无法跳到最后返回-1。
输入: nums = [2,3,1,1,4]
输出: 2
输入: nums = [2,3,0,1,4]
输出: 2

 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

#define N 50
#define M 50

int jump(int nums[], int n){
    // 当前能跳到的最远距离
    int dis = 0;
    // dis变化的次数就是step的次数，t记录step之前的状态
    int step = 0, t = dis;
    // 确保i，每次只能跳到dis的位置
    for (int i = 0; i <= dis; ++i) {
        if (t != dis) {
            step++;
            t = dis;
        }
        if (dis >= n - 1)
            return step;
        dis = dis > i + nums[i] ? dis : i + nums[i];
    }
    return -1;
}

int main(){
    int nums1[] = {2,3,1,1,4}, nums2[] = {2,3,0,1,4}, n = 5;
    printf("%d\n", jump(nums1, n));
    printf("%d\n", jump(nums2, n));
    return 0;
}