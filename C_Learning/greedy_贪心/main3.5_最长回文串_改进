/*
 *
3.5 最长回文串
给定一个包含大写字母和小写字母的字符串s，返回通过这些字母构造成的最长的回文串的长度。在构造过程中，请注意区分大小写 。比如 "Aa" 不能当做一个回文字符串。
输入：abccccdd
输出：7
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

#define N 50

int longest(char str[]){
    // alph为字母出现次数
    int alph[52] = {0}, res = 0, i = 0;
    while (str[i]){
        // 记录当前字符对应下标
        int idx = 0;
        if (str[i] >= 'a' && str[i] <= 'z') idx = str[i] - 'a';
        if (str[i] >= 'A' && str[i] <= 'Z') idx = str[i] - 'A' + 26;
        alph[idx]++;
        // 只要字母出现过大于2次，最终结果都能+2
        if (alph[idx] % 2 == 0) res += 2;
        i++;
    }
    // 如果字母出现奇数次，且为最大奇数次，结果就可以+1，因为其他字数次的字母只能用偶数个
    return res + (i != res);
}

int main(){
    char str[N] = {0};
    scanf("%s", str);
    printf("%d", longest(str));
    return 0;
}