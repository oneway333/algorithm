/*
 *
3.11 跳跃游戏Ⅱ
给你一个非负整数数组nums，你最初位于数组的第一个下标 。数组中的每个元素代表你在该位置可以跳跃的最大长度，求跳到最后一个元素的最少步数，若无法跳到最后返回-1。
输入: nums = [2,3,1,1,4]
输出: 2
输入: nums = [2,3,0,1,4]
输出: 2

 */

#include <stdio.h>

int jump2(int nums[], int n){
    int step = 0, begin = 0, end = 0;
    while (begin <= end){
        if (end >= n - 1) return step;
        int max = begin + nums[begin];
        for (int i = begin + 1; i <= end; ++i)
            max = max > begin + nums[begin] ? max : begin + nums[begin];
        step++;
        begin = end + 1;
        end = max;
    }
    return -1;
}

int main(){
    int nums1[] = {2,3,1,1,4}, nums2[] = {2,3,0,1,4}, n1 = 5, n2 = 5;
    printf("%d\n", jump2(nums1, n1));
    printf("%d\n", jump2(nums1, n1));
    return 0;


}