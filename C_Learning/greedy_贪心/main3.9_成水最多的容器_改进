/*
 *
3.9 盛水最多的容器
给定一个长度为n的整数数组height。有n条垂线，第i条线的两个端点是(i, 0)和(i, height[i])。找出其中的两条线，使得它们与x轴共同构成的容器可以容纳最多的水。返回容器可以储存的最大水量。

 输入：height = [1,8,6,2,5,4,8,3,7]
输出：49

 这个贪心的在于每次剔除“教短”（因为如果较长，面积可能增加）的边，然后计算，向中间递进
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

#define N 50
#define M 50

int cap(int height[], int n){
    int i = 0, j = n - 1;
    int max = 0;
    // 这个贪心的在于每次剔除“教短”（因为如果较长，面积可能增加）的边，然后计算，向中间递进
    while (i < j){
        int s = (j - i) * (height[i] < height[j] ? height[i] : height[j]);
        max = max > s ? max : s;
        if (height[i] < height[j]) i++;
        else j--;
    }
    return max;
}

int main(){
    int height[] = {1,8,6,2,5,4,8,3,7}, n = 9;
    printf("%d", cap(height, n));
    return 0;
}
